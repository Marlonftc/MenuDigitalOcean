name: CI/CD DigitalOcean Menu

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repo
      - uses: actions/checkout@v3

      # 2. Login a Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build & Push to Docker Hub
      - name: Build & Push to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER }}/menu-docean:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USER }}/menu-docean:${{ github.sha }}
          docker tag ${{ secrets.DOCKERHUB_USER }}/menu-docean:${{ github.sha }} ${{ secrets.DOCKERHUB_USER }}/menu-docean:latest
          docker push ${{ secrets.DOCKERHUB_USER }}/menu-docean:latest

      # 4. Login a DigitalOcean Container Registry
      - name: Log in to DOCR
        run: |
          echo "${{ secrets.DO_API_TOKEN }}" | docker login ${{ secrets.DO_REGISTRY }} --username do --password-stdin

      # 5. Tag & Push to DOCR
      - name: Tag & Push to DOCR
        run: |
          docker tag ${{ secrets.DOCKERHUB_USER }}/menu-docean:${{ github.sha }} ${{ secrets.DO_REGISTRY }}/menu-docean:${{ github.sha }}
          docker push ${{ secrets.DO_REGISTRY }}/menu-docean:${{ github.sha }}
          docker tag ${{ secrets.DOCKERHUB_USER }}/menu-docean:latest ${{ secrets.DO_REGISTRY }}/menu-docean:latest
          docker push ${{ secrets.DO_REGISTRY }}/menu-docean:latest

      # 6. Instalar doctl (DigitalOcean CLI)
      - name: Install doctl
        run: |
          FIXED_VERSION="v1.126.0"
          CLEANED_VERSION=${FIXED_VERSION#v}
          DOWNLOAD_URL="https://github.com/digitalocean/doctl/releases/download/${FIXED_VERSION}/doctl-${CLEANED_VERSION}-linux-amd64.tar.gz"
          echo "Trying to download: $DOWNLOAD_URL"
          curl -fsSL "$DOWNLOAD_URL" -o doctl.tar.gz
          tar -xzvf doctl.tar.gz
          sudo mv doctl /usr/local/bin

      # 7. Autenticar doctl
      - name: Authenticate doctl
        run: doctl auth init -t ${{ secrets.DO_API_TOKEN }}

      # 8. Debugging: Verificar archivos y secrets antes de update
      - name: Debugging Step
        run: |
          echo "Verificando archivos en el workspace..."
          ls -al
          echo "Mostrando las primeras líneas de spec.yaml (si existe):"
          head -n 20 spec.yaml || echo "spec.yaml no encontrado"
          echo "App ID presente: [${{ secrets.DO_APP_ID }}]"

      # 9. Desplegar usando doctl con manejo de errores
      - name: Update App Platform
        run: |
          if [[ -f ./spec.yaml ]]; then
            if ! doctl apps update ${{ secrets.DO_APP_ID }} --spec ./spec.yaml; then
              echo "Error: Falló el despliegue en DigitalOcean. Revisa el archivo spec.yaml y el DO_APP_ID."
              exit 1
            fi
          else
            echo "Error: spec.yaml no se encuentra en el directorio actual."
            exit 1
          fi
